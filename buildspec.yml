version: 0.2

phases:
  install:
    runtime-versions:
      nodejs: 20
    commands:
      - echo "Installing Node.js dependencies.............."
      - npm install
      - echo "Installing AWS CLI..."
      - curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
      - unzip awscliv2.zip
      - sudo ./aws/install --update
      - rm -rf awscliv2.zip aws  
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-12)
      - IMAGE_TAG=${COMMIT_HASH:=latest}

  pre_build:
    commands:
      - echo "Logging in to Amazon ECR..."
      - aws ecr get-login-password --region "${ECR_REGION}" | docker login --username AWS --password-stdin "${AWS_ACCOUNT_ID}.dkr.ecr.${ECR_REGION}.amazonaws.com"

  build:
    commands:
      - echo "Building the Docker image..."
      - docker build --build-arg NEXT_PUBLIC_API_BASE_URL="${NEXT_PUBLIC_API_BASE_URL}" -t "${AWS_ACCOUNT_ID}.dkr.ecr.${ECR_REGION}.amazonaws.com/${PROJECT_NAME}-${ENVIRONMENT}:${IMAGE_TAG}" .

  post_build:
    commands:
      - echo "Pushing Docker image to ECR..."
      - docker push "${AWS_ACCOUNT_ID}.dkr.ecr.${ECR_REGION}.amazonaws.com/${PROJECT_NAME}-${ENVIRONMENT}:${IMAGE_TAG}"
      - printf "[{\"name\":\"${PROJECT_NAME}-${ENVIRONMENT}\",\"imageUri\":\"%s\"}]" "${AWS_ACCOUNT_ID}.dkr.ecr.${ECR_REGION}.amazonaws.com/${PROJECT_NAME}-${ENVIRONMENT}:${IMAGE_TAG}" > "imagedefinitions_pelvic-floor-web-${ENVIRONMENT}.json"

artifacts:
  files:
    - "imagedefinitions_pelvic-floor-web-${ENVIRONMENT}.json"